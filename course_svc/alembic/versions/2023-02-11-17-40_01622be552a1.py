"""initial

Revision ID: 01622be552a1
Revises: 
Create Date: 2023-02-11 17:40:30.204328

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import app # custom added
from typing import Text # custom added
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '01622be552a1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('desc', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('sub_title', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('banner_image', sa.Integer(), nullable=True),
    sa.Column('trailer', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('public', 'private', 'premiere', name='coursestatusenum'), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_for_child', sa.Boolean(), nullable=True),
    sa.Column('level', sa.Enum('beginner', 'intermediate', 'expert', name='difficultylevelenum'), nullable=True),
    sa.Column('language', sa.Enum('uz', 'ru', 'en', name='languageenum'), nullable=True),
    sa.Column('installment_payment_id', sa.Integer(), nullable=True),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('profession',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('desc', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('course_comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('replied_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['replied_by'], ['course_comment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course_module',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('desc', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('content', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('level', postgresql.ENUM('beginner', 'intermediate', 'expert', name='difficultylevelenum', inherit_schema=True), nullable=True),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('link_course_tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_user_allowed_course',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('desc', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('profession_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['profession_id'], ['profession.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('desc', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.Column('logo_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('course_lesson',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('title', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('desc', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('course_module_id', sa.Integer(), nullable=True),
    sa.Column('content', app.models.base_model.SaTranslationField(astext_type=Text()), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('video_id', sa.Integer(), nullable=True),
    sa.Column('is_learned', sa.Boolean(), nullable=True),
    sa.Column('discount_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_module_id'], ['course_module.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('link_user_allowed_course_module',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_module_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_module_id'], ['course_module.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_category_course',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link_user_allowed_course_lesson',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('course_lesson_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_lesson_id'], ['course_lesson.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('link_user_allowed_course_lesson')
    op.drop_table('link_category_course')
    op.drop_table('link_user_allowed_course_module')
    op.drop_table('course_lesson')
    op.drop_table('category')
    op.drop_table('topic')
    op.drop_table('link_user_allowed_course')
    op.drop_table('link_course_tag')
    op.drop_table('course_module')
    op.drop_table('course_comment')
    op.drop_table('tag')
    op.drop_table('profession')
    op.drop_table('course')
    # ### end Alembic commands ###
